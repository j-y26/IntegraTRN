% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MOList.R
\name{setGene2Protein}
\alias{setGene2Protein}
\title{Setting conversion between protein and gene names}
\usage{
setGene2Protein(x, conversion)
}
\arguments{
\item{x}{A MOList object containing the omics data}

\item{conversion}{A data frame containing the conversion information between
                  protein and gene names, with names matching to the
                  proteomics  and RNAseq raw count data
\itemize{
\item \code{protein}: Name of the protein
\item \code{gene}: Name of the gene
}}
}
\value{
An object of class MOList
}
\description{
This function sets the conversion between protein and gene names
             for the proteomics data. The user can provide a data frame
             containing the conversion information. The data frame must
             contain two columns, one for the protein names and the other
             for the gene names. This must be provided to effectively utilize
             the proteomics data. The users are responsible for the validity
             of the conversion information.
}
\examples{
# Create example RNAseq and proteomics data
rnaseq <- matrix(sample(1:100, 50, replace = TRUE), ncol = 10)
rownames(rnaseq) <- paste0("gene_", seq_len(nrow(rnaseq)))
rnaGroupBy <- rep(c("A", "B"), each = 5)
proteomics <- matrix(sample(1:100, 30, replace = TRUE), ncol = 6)
rownames(proteomics) <- paste0("protein_", seq_len(nrow(proteomics)))
proteomicsGroupBy <- rep(c("A", "B"), each = 3)

# Create an example MOList object
objMOList <- MOList(
  RNAseq = rnaseq,
  RNAGroupBy = rnaGroupBy,
  proteomics = proteomics,
  proteomicsGroupBy = proteomicsGroupBy
)

# Create an example conversion information
conversion <- data.frame(
  protein = paste0("protein_", seq_len(nrow(rnaseq))),
  gene = paste0("gene_", seq_len(nrow(proteomics)))
)

# Set the conversion information to the MOList object
objMOList <- setGene2Protein(objMOList, conversion)

}
