% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TRNet.R
\docType{class}
\name{TRNet-class}
\alias{TRNet-class}
\alias{generatePlot}
\alias{parseVertexMetadata}
\alias{plotNetwork}
\title{TRNet S4 class of transcriptional regulatory network}
\usage{
generatePlot(trn)

parseVertexMetadata(trn)

plotNetwork(trn)
}
\arguments{
\item{trn}{A TRNet object}
}
\value{
A TRNet object with the igraph object in the network slot

A data frame containing the vertex metadata
}
\description{
The TRNet S4 class is a class for storing transcriptional
             regulatory network. It internally utilizes the igraph package
             to store the network, with additional parameters to store
             information about the network.

This function generates an igraph object from the TRNet network
             metadata

This function parses vertex metadata from the TRNet network
             metadata

This function plots the TRNet object
}
\section{Slots}{

\describe{
\item{\code{network}}{An igraph object containing the transcriptional regulatory
network. The nodes of the network are the genes and the edges
are the regulatory relationships between the genes. This is a
named, directed, and weighted graph.}

\item{\code{TRNmetadata}}{A data frame containing all interaction data for the
transcriptional regulatory network in adjacency list
format. The columns minimally includes "regulator",
"target", and "regulatorType".}

\item{\code{predicted}}{A logical value indicating whether the transcriptional
regulatory network contains inffered interactions.}

\item{\code{omics}}{A character string indicating the omics data used to construct
the transcriptional regulatory network.}
}}

\examples{
# Define some example edges
edges <- data.frame(
  regulator = c("A", "B", "C"),
  target = c("D", "E", "F"),
  regulatorType = c("miRNA", "TF", "TF")
)

# Create TRNet object
trn <- TRNet(edges, FALSE, "RNA-seq")

# Generate igraph object
generatePlot(trn)

# Define some example edges
edges <- data.frame(
  regulator = c("A", "B", "C"),
  target = c("D", "E", "F"),
  regulatorType = c("miRNA", "TF", "TF")
)

# Create TRNet object
trn <- TRNet(edges, FALSE, "RNA-seq")

# Parse vertex metadata
parseVertexMetadata(trn)

# Define some example edges
edges <- data.frame(
  regulator = c("A", "B", "C"),
  target = c("D", "E", "F"),
  regulatorType = c("miRNA", "TF", "TF")
)

# Create TRNet object
trn <- TRNet(edges, FALSE, "RNA-seq")

# Plot TRNet object
plotNetwork(trn)

}
\keyword{internal}
