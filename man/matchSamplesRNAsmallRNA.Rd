% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mRNAsmallRNAcoExprEstimate.R
\name{matchSamplesRNAsmallRNA}
\alias{matchSamplesRNAsmallRNA}
\title{Match RNAseq and small RNAseq samples}
\usage{
matchSamplesRNAsmallRNA(
  objMOList,
  sampleDFRNAseq = NULL,
  sampleDFSmallRNAseq = NULL,
  varMatch = NULL
)
}
\arguments{
\item{objMOList}{An object of class MOList}

\item{sampleDFRNAseq}{A data frame containing the RNAseq sample information.
Each sample is a row in the data frame, with row names
being the sample names that correspond to the sample
names in the MOList object.}

\item{sampleDFSmallRNAseq}{A data frame containing the small RNAseq sample
information. Each sample is a row in the data
frame, with row names being the sample names that
correspond to the sample names in the MOList
object.}

\item{varMatch}{A vector of variable names that will be used for matching.
The variable names should be present in both sampleDFRNAseq
and sampleDFSmallRNAseq. If NULL, default to use all
common variables in the sample data frames.}
}
\value{
An object of class MOList with the matching information stored in
        a list of two numeric vectors with equal length, where each element
        in the first vector is the index of the RNAseq sample, and the
        corresponding element in the second vector is the index of the
        matched small RNAseq sample. These indices match to the sample names
        in the RNAseqSamples and smallRNAseqSamples slots of the MOList
        object. The slot is a list under the following structure:
\itemize{
\item{indexRNAseq}{A numeric vector containing the indices of the RNAseq
                   samples.}
\item{indexSmallRNAseq}{A numeric vector containing the indices of the small
                        RNAseq samples.}
}
}
\description{
This function generates a one-to-one matching between the
             RNAseq samples and the small RNAseq samples using the
             optimal pair matching algorithm, which is a variant of nearest
             neighbor matching. The matching is based on the grouping
             variable and other variables in the sample data frames.
}
\examples{
# Create a MOList object with RNAseq and small RNAseq data,
# each containing 5 samples
rnaMatrix <- matrix(sample(1:100, 100), ncol = 5)
rnaGroup <- c("A", "A", "B", "B", "B")
smallRNAseqMatrix <- matrix(sample(1:100, 100), ncol = 5)
smallRNAseqGroup <- c("A", "A", "B", "B", "B")
myMOList <- MOList(RNAseq = rnaMatrix,
                   RNAGroupBy = rnaGroup,
                   smallRNAseq = smallRNAseqMatrix,
                   smallRNAGroupBy = smallRNAseqGroup)

# Example 1: No additional sample information provided
\dontrun{
# Perform matching
myMOList <- matchSamplesRNAsmallRNA(myMOList)
}

# Example 2: Additional sample information provided
\dontrun{
# Suppose we have two data frames containing the sample information
sampleDFRNAseq <- data.frame(
  Age = c(1, 2, 3, 4, 5),
  Sex = c("M", "M", "F", "F", "F")
)
sampleDFSmallRNAseq <- data.frame(
  Age = c(1, 2, 3, 4, 5),
  Sex = c("M", "M", "F", "F", "F")
)
# Perform matching
myMOList <- matchSamplesRNAsmallRNA(myMOList,
  sampleDFRNAseq = sampleDFRNAseq,
  sampleDFSmallRNAseq = sampleDFSmallRNAseq
)
# Will account for both age and sex
}

# Example 3: Additional sample information provided, with matching variables
\dontrun{
# Suppose we just want to match based on age
myMOList <- matchSamplesRNAsmallRNA(myMOList,
  sampleDFRNAseq = sampleDFRNAseq,
  sampleDFSmallRNAseq = sampleDFSmallRNAseq,
  varMatch = "Age"
)
# Will only account for age
}

}
\references{
\insertRef{stuart2011matchit}{IntegraTRN}

\insertRef{gong2020optmatch}{IntegraTRN}
}
